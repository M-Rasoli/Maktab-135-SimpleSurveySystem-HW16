// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleSurveySystem.Infrastructure;

#nullable disable

namespace SimpleSurveySystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimpleSurveySystem.Entities.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OptionNumber")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 1,
                            QuestionId = 1,
                            Text = "Less than 2 hours."
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 2,
                            QuestionId = 1,
                            Text = "Less than 4 hours."
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 3,
                            QuestionId = 1,
                            Text = "More than 4 hours."
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 4,
                            QuestionId = 1,
                            Text = "More than 8 hours."
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 1,
                            QuestionId = 2,
                            Text = "Less than 2 hours."
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 2,
                            QuestionId = 2,
                            Text = "Less than 4 hours."
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 3,
                            QuestionId = 2,
                            Text = "More than 4 hours."
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 4,
                            QuestionId = 2,
                            Text = "More than 8 hours."
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 1,
                            QuestionId = 3,
                            Text = "Mystery"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 2,
                            QuestionId = 3,
                            Text = "Historical"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 3,
                            QuestionId = 3,
                            Text = "Poetry"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 4,
                            QuestionId = 3,
                            Text = "Fantasy"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 1,
                            QuestionId = 4,
                            Text = "The Silent Patient by Alex Michaelides"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 2,
                            QuestionId = 4,
                            Text = "A Game of Thrones by George R. R. Martin"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 3,
                            QuestionId = 4,
                            Text = "Odyssey by Homer"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 4,
                            QuestionId = 4,
                            Text = "None"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 1,
                            QuestionId = 5,
                            Text = "Never"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 2,
                            QuestionId = 5,
                            Text = "Often"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 3,
                            QuestionId = 5,
                            Text = "Always"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 4,
                            QuestionId = 5,
                            Text = "Fantasy"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 1,
                            QuestionId = 6,
                            Text = "Action"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 2,
                            QuestionId = 6,
                            Text = "Drama"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 3,
                            QuestionId = 6,
                            Text = "Crime fiction"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 4,
                            QuestionId = 6,
                            Text = "Comedy "
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 1,
                            QuestionId = 7,
                            Text = "Less than 2 hours."
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 2,
                            QuestionId = 7,
                            Text = "Less than 4 hours."
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 3,
                            QuestionId = 7,
                            Text = "More than 4 hours."
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 4,
                            QuestionId = 7,
                            Text = "More than 8 hours. "
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 1,
                            QuestionId = 8,
                            Text = "Christopher Edward Nolan"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 2,
                            QuestionId = 8,
                            Text = "Stanley Kubrick"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 3,
                            QuestionId = 8,
                            Text = "Martin Charles Scorsese"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            OptionNumber = 4,
                            QuestionId = 8,
                            Text = "David Andrew Leo Fincher"
                        });
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionTitle")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            QuestionTitle = "How many hours do you use your phone per day?",
                            SurveyId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            QuestionTitle = "How many hours do you use your PC per day? ",
                            SurveyId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            QuestionTitle = "What genre is your favorite book usually from?",
                            SurveyId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            QuestionTitle = "Which of the following books have you read?",
                            SurveyId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            QuestionTitle = "How often do you recommend others to read books?",
                            SurveyId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            QuestionTitle = "What genre is your favorite movie usually from?",
                            SurveyId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            QuestionTitle = "How many hours a day do you usually spend watching movies?",
                            SurveyId = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            QuestionTitle = "Which of the following directors' works have you seen?",
                            SurveyId = 3
                        });
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Surveys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Title = "Using Technology"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Title = "Favorite book"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Title = "Favorite Movie"
                        });
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Password = "123",
                            Role = "Admin",
                            Username = "mmd"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Password = "123",
                            Role = "NormalUSer",
                            Username = "ali"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Password = "123",
                            Role = "NormalUSer",
                            Username = "mahdi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Password = "123",
                            Role = "NormalUSer",
                            Username = "porya"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Password = "123",
                            Role = "NormalUSer",
                            Username = "hasan"
                        });
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.UserSurvey", b =>
                {
                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SurveyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSurveyrs");
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SurveyId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.Option", b =>
                {
                    b.HasOne("SimpleSurveySystem.Entities.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.Question", b =>
                {
                    b.HasOne("SimpleSurveySystem.Entities.Survey", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.UserSurvey", b =>
                {
                    b.HasOne("SimpleSurveySystem.Entities.Survey", "Survey")
                        .WithMany("UserSurveys")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleSurveySystem.Entities.User", "User")
                        .WithMany("UserSurveys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Survey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.Vote", b =>
                {
                    b.HasOne("SimpleSurveySystem.Entities.Option", "Option")
                        .WithMany("Votes")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleSurveySystem.Entities.Question", "Question")
                        .WithMany("Votes")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SimpleSurveySystem.Entities.Survey", "Survey")
                        .WithMany("Votes")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SimpleSurveySystem.Entities.User", "User")
                        .WithMany("Votes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Option");

                    b.Navigation("Question");

                    b.Navigation("Survey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.Option", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.Question", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.Survey", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("UserSurveys");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("SimpleSurveySystem.Entities.User", b =>
                {
                    b.Navigation("UserSurveys");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
